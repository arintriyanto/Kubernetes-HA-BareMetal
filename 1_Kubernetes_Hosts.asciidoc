
= Chapter I. Kubernetes Host Machines
:sectnums:
:sectanchors:

The process of getting the hosts ready will clearly differ depending on whether you're
actually on bare metal servers, or if you're running on some hosted servers
(e.g. VPS, EC2 instances, etc.)

== Preparation: Select OS for Kubernetes Hosts

Docker is known to have several issues with different Linux kernel versions. One thing
we learnt (the hard way) is that `One does not simply run Docker on Linux` (and expect
a production-grade system).

We would recommend you stay with one of the supported OS versions that Kubespray supports.

Namely: *Ubuntu*, *CoreOS* or *Centos*. We chose Ubuntu, due to previous familiarity with the distro.


== Bare Metal

Clearly, the first step after you wire up the servers on your rack is to install the
operating system. In our case this was Ubuntu 16.04, so
link:Ubuntu_16_04_server_os_install.asciidoc[I wrote down the steps], in case you have
any doubts.

== AWS EC2 (without ELB / NAT Gateway)

EC2 (ok, and VPC) is all we'll be using out of Amazon's services, to ensure we can easily
transfer somewhere else.

Now, you _could_ just go on the AWS web console, start a bunch of `ubuntu 16.04` instances,
tag/name them appropriately and give them to Ansible (the next step), but... why would you?

We have `Terraform` for that. In fact, the
https://github.com/kubernetes-incubator/kubespray[Kubespray repo] even has a terraform
example for AWS ready for you!

BUT... it uses the AWS ELB and NAT gateway. Deal breakers for us here, so what are we to do
but roll our own ?

AWS ELB:: Amazon's elastic load balancer is used to bring internet traffic into your k8s
cluster.
+
We hereby provide an HA solution that is based on the
https://github.com/kubernetes/contrib/tree/master/service-loadbalancer[Kubernetes Service LoadBalancer].


NAT Gateway:: The Kubespray example deploys all of the Kubernetes cluster on a private
subnet, meaning the EC2 instances don't have public IPs. Amazon's NAT gateway offers a
way to NAT your traffic to a set of Elastic IPs, allowing - amongst other things - your
peers to whitelist just your IPs.
+
We will provide a different solution to satisfy this constraint, as we can't afford to have
just any random set of IPs as the source of our traffic.

Both these will be discussed in the next section.

We also have our own example that allows you to set up your K8s cluster even within an existing
VPC, and this does NOT use an AWS ELB or NAT gateway. Please take a look at the `terraform` directory.

+++<hr>+++

Now that you have some hosts ready, you can
link:2_Kubernetes_Requirements.asciidoc[proceed with the rest of the requirements] before
installing your Kubernetes cluster.
