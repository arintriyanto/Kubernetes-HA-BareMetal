
= Logging using Elasticsearch, Fluentd, Kibana (EFK)

If you want to direct logs to an elasticsearch cluster, there is a simple option in kubespray to enable this - WHICH I AM NOT USING. You're supposed to edit file: `my_inventory/group_vars/k8s-cluster.yml` and find the `efk_enabled` attribute, making sure it is set to true.

However, I found a couple of things I didn't like with this approach:
1. elasticsearch and kibana versions used are still too old (2.4.x)
1. they're deployed in the `kube-system` namespace. I'd like them in their separate namespace.
1. `kibana` is deployed with a `KIBANA_BASE_URL` attribute, so it can be served using `kubectl proxy`, but I don't want it limited that way.

In search of a better solution, I found this https://github.com/gregbkr/kubernetes-kargo-logging-monitoring.git[very interesting guide], however I was not able to deploy the `Logging` solution, due to an issue with the persistent volume.

----
# Monitoring apps for k8s
efk_enabled: true
----

Now, you can rerun the playbook.

After playbook has finished, you need to manually change a couple of things.

1. Edit the Kibana deployment, and **remove** the `KIBANA_BASE_URL` attribute.
1. Edit the Kibana service, changing the type from `ClusterIP` to `NodePort`, so you can access it from outside the cluster. Also

----
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: kube-system
spec:
  type: NodePort
  selector:
    k8s-app: kibana-logging
  ports:
  - port: 5601
    nodePort: 30601
----

1. You should now be able to access k8s_node_ip:30601

= Set up GlusterFS cluster

=== Create LVs

Create a logical volume with 100GB to each server with the following command: ï»¿`sudo lvcreate -L 100g <name-of the-volume-group>`
The name of the volume group can be retrieved with the following command under VG column: `sudo lvs`

=== Add GlusterFS to inventory

Add the volume disk id, on the same line, for each host in your glusterfs cluster inventory:
e.g. `disk_volume_device_1=/dev/mapper/ent--vg-lvol0`.

Sample inventory:
----
[all]
pegasus      ansible_host=139.91.23.5 ip=139.91.23.5 disk_volume_device_1=/dev/mapper/pegasus--vg-lvol0
ent      ansible_host=139.91.23.8 ip=139.91.23.8 disk_volume_device_1=/dev/mapper/ent--vg-lvol0
----
